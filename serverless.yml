service: culture-condorlabs-apps
package:
  exclude:
    - client/**
plugins: 
  - serverless-offline
provider:
  name: aws
  runtime: nodejs12.x
  usagePlan:
    quota:
      limit: 5000
      offset: 2
      period: MONTH
    throttle:
      burstLimit: 200
      rateLimit: 100
functions:
  post-save-quote:
    handler: api.saveQuote
    name: post-save-quote-${opt:stage}
    environment: 
      NODE_ENV: ${opt:stage}
      MONGO_PORT: 27017
      MONGO_HOST: ${file(./api/config/${opt:stage}.json):MONGO_HOST}
      MONGO_SECRET: ${file(./api/config/${opt:stage}.json):MONGO_SECRET}
      MONGO_DATABASE: ${file(./api/config/${opt:stage}.json):MONGO_DATABASE}
      MONGO_SET: ${file(./api/config/${opt:stage}.json):MONGO_SET}
      MONGO_USER: ${file(./api/config/${opt:stage}.json):MONGO_USER}
      MONGO_SSL: true
    events: 
      - http: 
          path: /condorlabs/quotes
          method: post
          cors: 
            - enabled: true
            - origin: '*'
            - headers:  'Access-Control-Allow-Origin: *'
          name: cultureApi
  get-save-quote:
    handler: api.getQuotes
    name: get-save-quote-${opt:stage}
    environment: 
      NODE_ENV: ${opt:stage}
      MONGO_PORT: 27017
      MONGO_HOST: ${file(./api/config/${opt:stage}.json):MONGO_HOST}
      MONGO_SECRET: ${file(./api/config/${opt:stage}.json):MONGO_SECRET}
      MONGO_DATABASE: ${file(./api/config/${opt:stage}.json):MONGO_DATABASE}
      MONGO_SET: ${file(./api/config/${opt:stage}.json):MONGO_SET}
      MONGO_USER: ${file(./api/config/${opt:stage}.json):MONGO_USER}
      MONGO_SSL: true
    events: 
      - http: 
          path: /condorlabs/quotes
          method: get
          cors: 
            - enabled: true
            - origin: '*'
            - headers:  'Access-Control-Allow-Origin: *'
          name: cultureApi